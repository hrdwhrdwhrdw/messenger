{"version":3,"file":"static/js/581.26b8f55e.chunk.js","mappings":"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","sources":["constants/styles.ts","redux/selectors/users-selectors.ts","redux/actions/usersActions.ts","API/userAPI.ts","redux/thunks/usersThunks.ts","webpack://messenger/./src/helpers/pagination/Pagination.module.scss?f30d","helpers/pagination/Pagination.tsx","pages/users-page/User.tsx","pages/users-page/Users.tsx","webpack://messenger/./src/components/Forms/user-search-form/UserSearchForm.module.scss?f0ba","components/Forms/user-search-form/UserSearchForm.tsx","pages/users-page/UsersContainer.tsx"],"sourcesContent":["export const PURPLE = \"#7663fd\";\r\nexport const BURGUNDY = \"#321738\";\r\nexport const WHITE = \"#fff\";","import { RootState } from '../store/store';\r\nexport const getUsers = (state: RootState) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state: RootState) => {\r\n  return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state: RootState) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state: RootState) => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getPortionSize = (state: RootState) => {\r\n  return state.usersPage.portionSize;\r\n};\r\n\r\nexport const getIsFetching = (state: RootState) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state: RootState) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n\r\nexport const getUsersFilter = (state: RootState) => {\r\n  return state.usersPage.filter;\r\n};","import { UserType } from \"types/user-types\";\r\nimport { FilterType } from '../../components/Forms/user-search-form/UserSearchForm';\r\nimport { SET_USERS_FILTER } from '../../constants/constants';\r\nimport {\r\n  FOLLOW,\r\n  UNFOLLOW,\r\n  SET_USERS,\r\n  SET_CURRENT_PAGE,\r\n  SET_TOTAL_USERS_COUNT,\r\n  IS_FETCHING_TOGGLE,\r\n  FOLLOWING_IN_PROGRESS,\r\n} from \"../../constants/constants\";\r\n\r\nexport const actions = {\r\n  follow: (userId: number) => ({\r\n    type: FOLLOW,\r\n    userId,\r\n  }) as const,\r\n  unfollow: (userId: number) => ({\r\n    type: UNFOLLOW,\r\n    userId,\r\n  }) as const,\r\n  setUsers: (users: Array<UserType>) => ({\r\n    type: SET_USERS,\r\n    users,\r\n  }) as const,\r\n  setTotalUsers: (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount,\r\n  }) as const,\r\n  setCurrentPage: (currentPage: number) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage,\r\n  }) as const,\r\n  setUsersFilter: (filter: FilterType) => ({\r\n    type: SET_USERS_FILTER,\r\n    filter,\r\n  }) as const,\r\n  isFetchingToggle: (isFetching: boolean) => ({\r\n    type: IS_FETCHING_TOGGLE,\r\n    isFetching,\r\n  }) as const,\r\n  followingInProgressToggle: (isFetching: boolean, userId: number) => ({\r\n    type: FOLLOWING_IN_PROGRESS,\r\n    isFetching,\r\n    userId,\r\n  }) as const,\r\n};","import { UserType } from \"types/user-types\";\r\nimport { instance } from \"./instance\";\r\nimport { DefaultResponseType } from \"../types/response-type\";\r\nimport { AxiosPromise } from \"axios\";\r\nimport { FilterType } from '../components/Forms/user-search-form/UserSearchForm';\r\n\r\ntype GetUsersType = {\r\n  items: Array<UserType>;\r\n  totalCount: number;\r\n  error: string;\r\n};\r\n\r\nexport const UsersAPI = {\r\n  async getUsers(pageSize: number, page: number, filter: FilterType) {\r\n    const res = await instance.get<GetUsersType>(\r\n      `users?count=${pageSize}&page=${page}&term=${filter.term}&friend=${filter.isFriend}`\r\n    );\r\n    return res.data;\r\n  },\r\n\r\n  async follow(userId: number) {\r\n    const res = await instance.post<DefaultResponseType>(`follow/${userId}`);\r\n    return res.data;\r\n  },\r\n\r\n  unfollow(userId: number) {\r\n    return instance.delete<DefaultResponseType>(\r\n      `follow/${userId}`\r\n    ) as AxiosPromise<DefaultResponseType>;\r\n  },\r\n};\r\n","import { actions } from \"../actions/usersActions\";\r\nimport { UsersAPI } from \"../../API/userAPI\";\r\nimport { ResponseCodes } from \"types/response-codes\";\r\nimport ThunkType from \"types/thunk-type\";\r\nimport { ActionTypes } from \"redux/reducers/usersReducer\";\r\nimport { FilterType } from \"../../components/Forms/user-search-form/UserSearchForm\";\r\n\r\ntype UserThunkType = ThunkType<ActionTypes>;\r\n\r\nexport const requestUsers =\r\n  (pageSize: number, currentPage: number, filter: FilterType): UserThunkType =>\r\n  async (dispatch) => {\r\n    dispatch(actions.isFetchingToggle(true));\r\n    dispatch(actions.setCurrentPage(currentPage));\r\n    dispatch(actions.setUsersFilter(filter));\r\n    let data = await UsersAPI.getUsers(pageSize, currentPage, filter);\r\n    dispatch(actions.isFetchingToggle(false));\r\n    dispatch(actions.setUsers(data.items));\r\n    dispatch(actions.setTotalUsers(data.totalCount));\r\n  };\r\n\r\nexport const followUser =\r\n  (userId: number): UserThunkType =>\r\n  async (dispatch) => {\r\n    dispatch(actions.followingInProgressToggle(true, userId));\r\n    let res = await UsersAPI.follow(userId);\r\n    if (res.resultCode === ResponseCodes.Success) {\r\n      dispatch(actions.follow(userId));\r\n    }\r\n    dispatch(actions.followingInProgressToggle(false, userId));\r\n  };\r\n\r\nexport const unfollowUser =\r\n  (userId: number): UserThunkType =>\r\n  async (dispatch) => {\r\n    dispatch(actions.followingInProgressToggle(true, userId));\r\n    let res = await UsersAPI.unfollow(userId);\r\n    if (res.data.resultCode === ResponseCodes.Success) {\r\n      dispatch(actions.unfollow(userId));\r\n    }\r\n    dispatch(actions.followingInProgressToggle(false, userId));\r\n  };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__rHtt7\",\"button\":\"Pagination_button__xqsAl\",\"active\":\"Pagination_active__CaaUD\"};","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\";\r\nimport styles from \"./Pagination.module.scss\";\r\n\r\ntype Props = {\r\n  totalItemsCount: number;\r\n  pageSize: number;\r\n  currentPage: number;\r\n  onPageChange: (PageNumber: number) => void;\r\n  portionSize: number;\r\n};\r\n\r\nconst Pagination: React.FC<Props> = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChange,\r\n  portionSize,\r\n}) => {\r\n  useEffect(\r\n    () => setPortionNumber(Math.ceil(currentPage / portionSize)),\r\n    [currentPage, portionSize]\r\n  );\r\n\r\n  let pages: Array<number> = [];\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState<number>(1);\r\n  let leftPageNumberPortion = (portionNumber - 1) * portionSize + 1;\r\n  let rightPageNumberPortion = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.pagination}>\r\n      {portionNumber > 1 ? (\r\n        <Button\r\n          className={styles.button}\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          <DoubleArrowIcon sx={{ transform: \"rotate(180deg)\" }} />\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          className={styles.button}\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n          disabled={true}\r\n        >\r\n          <DoubleArrowIcon sx={{ transform: \"rotate(180deg)\" }} />\r\n        </Button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPageNumberPortion && p <= rightPageNumberPortion\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <Button\r\n              className={\r\n                p === currentPage\r\n                  ? [styles.button, styles.active].join(\" \")\r\n                  : styles.button\r\n              }\r\n              onClick={(e) => onPageChange(p)}\r\n              key={p}\r\n            >\r\n              {p}\r\n            </Button>\r\n          );\r\n        })}\r\n      {portionNumber < portionCount && (\r\n        <Button\r\n          className={styles.button}\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          <DoubleArrowIcon />\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport \"./Users.scss\";\r\nimport defaultUserPhoto from \"./../../assets/images/i.webp\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { PURPLE, WHITE } from \"../../constants/styles\";\r\nimport { UserType } from \"types/user-types\";\r\n\r\ntype Props = {\r\n  followingInProgress: Array<number>;\r\n  user: UserType;\r\n  follow: (id: number) => void;\r\n  unfollow: (id: number) => void;\r\n};\r\n\r\nconst User: React.FC<Props> = ({\r\n  followingInProgress,\r\n  follow,\r\n  unfollow,\r\n  user,\r\n}) => {\r\n  const style = {\r\n    fontSize: \"12px\",\r\n    width: \"80px\",\r\n    color: WHITE,\r\n    fontWeight: \"bold\",\r\n    border: \"2px solid #8169ff\",\r\n    borderRadius: \"20px\",\r\n    textTransform: \"capitalize\",\r\n    \"&:hover\": {\r\n      backgroundColor: PURPLE,\r\n    },\r\n  };\r\n  return (\r\n    <div className=\"user__item\">\r\n      <div>\r\n        <Link to={\"/profile/\" + user.id}>\r\n          <img\r\n            src={user.photos.small || defaultUserPhoto}\r\n            alt=\"\"\r\n            className=\"user__image\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className=\"user__info\">\r\n        <div className=\"user__name\">\r\n          <span>{user.name}</span>\r\n        </div>\r\n        <div className=\"user__status\">\r\n          <span>{user.status}</span>\r\n        </div>\r\n        {user.followed ? (\r\n          <Button\r\n            disabled={followingInProgress.some((id) => id === user.id)}\r\n            onClick={() => {\r\n              unfollow(user.id);\r\n            }}\r\n            sx={style as any}\r\n            className=\"user__button\"\r\n          >\r\n            Unfollow\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={followingInProgress.some((id) => id === user.id)}\r\n            onClick={() => {\r\n              follow(user.id);\r\n            }}\r\n            sx={style as any}\r\n            className=\"user__button\"\r\n          >\r\n            Follow\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import \"./Users.scss\";\r\n\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Pagination from \"../../helpers/pagination/Pagination\";\r\nimport {\r\n  getFollowingInProgress,\r\n  getPortionSize,\r\n  getTotalUsersCount,\r\n  getUsers,\r\n} from \"../../redux/selectors/users-selectors\";\r\nimport { followUser, unfollowUser } from \"../../redux/thunks/usersThunks\";\r\nimport User from \"./User\";\r\nimport { FilterType } from \"../../components/Forms/user-search-form/UserSearchForm\";\r\n\r\ntype PropsType = {\r\n  pageSize: number;\r\n  currentPage: number;\r\n  onPageChange: (page: number) => void;\r\n  setUsersFilter: (filter: FilterType) => void;\r\n};\r\n\r\nconst Users: React.FC<PropsType> = ({\r\n  pageSize,\r\n  currentPage,\r\n  onPageChange,\r\n}) => {\r\n  const users = useSelector(getUsers);\r\n  const totalUsersCount = useSelector(getTotalUsersCount);\r\n  const portionSize = useSelector(getPortionSize);\r\n  const followingInProgress = useSelector(getFollowingInProgress);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const follow = (userId: number) => {\r\n    dispatch(followUser(userId));\r\n  };\r\n\r\n  const unfollow = (userId: number) => {\r\n    dispatch(unfollowUser(userId));\r\n  };\r\n\r\n  return (\r\n    <div className=\"user\">\r\n      <div className=\"user__list\">\r\n        {users.map((user) => (\r\n          <User\r\n            user={user}\r\n            followingInProgress={followingInProgress}\r\n            follow={follow}\r\n            unfollow={unfollow}\r\n            key={user.id}\r\n          />\r\n        ))}\r\n      </div>\r\n      <Pagination\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n        currentPage={currentPage}\r\n        onPageChange={onPageChange}\r\n        portionSize={portionSize}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"UserSearchForm_title__u2SMA\",\"input\":\"UserSearchForm_input__j40kY\",\"form\":\"UserSearchForm_form__HOeLK\",\"select\":\"UserSearchForm_select__G-dVa\",\"option\":\"UserSearchForm_option__9V0dt\",\"button\":\"UserSearchForm_button__rjKrx\"};","import React from \"react\";\r\nimport { Formik, Field, Form, FormikHelpers } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUsersFilter } from \"../../../redux/selectors/users-selectors\";\r\nimport CustomButton from \"../../Button/Button\";\r\nimport styles from \"./UserSearchForm.module.scss\";\r\nexport interface FilterType {\r\n  term: string;\r\n  isFriend: boolean;\r\n}\r\n\r\ntype PropsType = {\r\n  setUserFilter: (filter: FilterType) => void;\r\n};\r\n\r\ntype FriendType = \"null\" | \"false\" | \"true\";\r\n\r\ntype FormType = {\r\n  term: string;\r\n  isFriend: FriendType;\r\n};\r\n\r\nexport const UserSearchForm: React.FC<PropsType> = ({ setUserFilter }) => {\r\n  const reduxFilter = useSelector(getUsersFilter);\r\n\r\n  return (\r\n    <div className={styles.form}>\r\n      <h1 className={styles.title}>Search user</h1>\r\n      <Formik\r\n        initialValues={{\r\n          term: reduxFilter.term as never,\r\n          isFriend: String(reduxFilter.isFriend) as never,\r\n        }}\r\n        enableReinitialize\r\n        onSubmit={(\r\n          values: FilterType,\r\n          { setSubmitting }: FormikHelpers<FilterType>\r\n        ) => {\r\n          setUserFilter(values);\r\n          setSubmitting(false);\r\n        }}\r\n      >\r\n        <Form>\r\n          <Field\r\n            id=\"term\"\r\n            name=\"term\"\r\n            placeholder=\"Search user...\"\r\n            className={styles.input}\r\n          />\r\n          <Field as=\"select\" name=\"isFriend\" className={styles.select}>\r\n            <option className={styles.option} value=\"null\">All users</option>\r\n            <option className={styles.option} value=\"true\">Only followed</option>\r\n            <option className={styles.option} value=\"false\">Only unfollowed</option>\r\n          </Field>\r\n          <CustomButton type=\"submit\" className={styles.button}>Submit</CustomButton>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Preloader from \"../../components/Preloader/Preloader\";\r\nimport {\r\n  getCurrentPage,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getUsersFilter,\r\n} from \"../../redux/selectors/users-selectors\";\r\nimport { requestUsers } from \"../../redux/thunks/usersThunks\";\r\nimport Users from \"./Users\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport {\r\n  FilterType,\r\n  UserSearchForm,\r\n} from \"../../components/Forms/user-search-form/UserSearchForm\";\r\n\r\nconst UsersContainer: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const pageSize = useSelector(getPageSize);\r\n  const currentPage = useSelector(getCurrentPage);\r\n  const reduxFilter = useSelector(getUsersFilter);\r\n\r\n  const navigate = useNavigate();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n    let term = searchParams.get(\"term\");\r\n    let friend = searchParams.get(\"friend\");\r\n    let page = Number(searchParams.get(\"page\"));\r\n    let actualPage = currentPage;\r\n    let actualFilter = reduxFilter;\r\n\r\n    page ? (actualPage = page) : null;\r\n    term ? (actualFilter = { ...actualFilter, term: term }) : null;\r\n\r\n    switch (friend) {\r\n      case \"null\":\r\n        actualFilter = { ...actualFilter, isFriend: null };\r\n        break;\r\n      case \"true\":\r\n        actualFilter = { ...actualFilter, isFriend: true };\r\n        break;\r\n      case \"false\":\r\n        actualFilter = { ...actualFilter, isFriend: false };\r\n        break;\r\n    }\r\n    dispatch(requestUsers(pageSize, actualPage, actualFilter));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    navigate({\r\n      search: `?term=${reduxFilter.term}&friend=${reduxFilter.isFriend}&page=${currentPage}`,\r\n    });\r\n  }, [reduxFilter, currentPage]);\r\n\r\n  const onPageChange = (page: number) => {\r\n    dispatch(requestUsers(pageSize, page, reduxFilter));\r\n  };\r\n\r\n  const setUsersFilter = (filter: FilterType) => {\r\n    dispatch(requestUsers(pageSize, 1, filter));\r\n  };\r\n\r\n  const isFetching = useSelector(getIsFetching);\r\n\r\n  return (\r\n    <div className=\"user__container\">\r\n      <UserSearchForm setUserFilter={setUsersFilter} />\r\n      {isFetching ? (\r\n        <Preloader />\r\n      ) : (\r\n        <Users\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={onPageChange}\r\n          setUsersFilter={setUsersFilter}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersContainer;\r\n"],"names":["PURPLE","BURGUNDY","WHITE","getUsers","state","usersPage","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getPortionSize","portionSize","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getUsersFilter","filter","actions","userId","type","FOLLOW","UNFOLLOW","SET_USERS","SET_TOTAL_USERS_COUNT","SET_CURRENT_PAGE","SET_USERS_FILTER","IS_FETCHING_TOGGLE","FOLLOWING_IN_PROGRESS","UsersAPI","page","instance","term","isFriend","res","data","requestUsers","dispatch","items","totalCount","totalItemsCount","onPageChange","useEffect","setPortionNumber","Math","ceil","pages","pagesCount","i","push","portionCount","useState","portionNumber","leftPageNumberPortion","rightPageNumberPortion","className","styles","Button","onClick","DoubleArrow","sx","transform","disabled","p","map","join","e","follow","unfollow","user","style","fontSize","width","color","fontWeight","border","borderRadius","textTransform","backgroundColor","to","id","src","photos","small","defaultUserPhoto","alt","name","status","followed","some","useSelector","useDispatch","resultCode","ResponseCodes","followUser","unfollowUser","UserSearchForm","setUserFilter","reduxFilter","initialValues","String","enableReinitialize","onSubmit","values","setSubmitting","placeholder","as","value","navigate","useNavigate","useSearchParams","searchParams","get","friend","Number","actualPage","actualFilter","search","setUsersFilter","Preloader"],"sourceRoot":""}